<!--
  Author:    Jingwen Zhang
  Partner:   -Na-
  Date:      2021/10/24
  Course:    CS 4540, University of Utah, School of Computing
  Copyright: CS 4540 and Jingwen Zhang - This work may not be copied for use in Academic Coursework.

  I, Jingwen Zhang, certify that I wrote this code from scratch and did not copy it in part or whole from
  another source.  Any references used in the completion of the assignment are cited in my README file.
-->

@using Microsoft.AspNetCore.Identity
@using TA__Application.Areas.Identity.Data;

@inject SignInManager<TAUser> SignInManager
@inject UserManager<TAUser> UserManager

<ul class="navbar-nav">

    @if (SignInManager.IsSignedIn(User) && await UserManager.GetUserAsync(User) is not null)
    {
        var user = await UserManager.GetUserAsync(User);
        var roles = await UserManager.GetRolesAsync(user);
        string roleName = roles.ElementAt(0);
    <li class="nav-item">
        <a id="manage" class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">@user.UID (@roleName)</a>
    </li>
    <li class="nav-item">
        <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
            <button id="logout" type="submit" class="nav-link btn btn-link text-dark">Logout</button>
        </form>
    </li>
    }
    else
    {
    <li class="nav-item">
        <a class="nav-link text-dark" id="register" asp-area="Identity" asp-page="/Account/Register">Register</a>
    </li>
    <li class="nav-item">
        <a class="nav-link text-dark" id="login" asp-area="Identity" asp-page="/Account/Login">Login</a>
    </li>
    }
</ul>
